
println "Gradle version is ${GradleVersion.current().version}"

buildscript {
    ext.kotlin_version = '1.2.40'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

wrapper {
    gradleVersion = '4.6'
}

def snapshot = true

group 'info.laht'
version '0.7'

if (snapshot) {
    version += '-SNAPSHOT'
}

apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

    implementation group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.3.8'
    implementation group: 'org.zeromq', name: 'jeromq', version: '0.4.3'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    runtimeOnly group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

    testImplementation group: 'junit', name: 'junit', version: '4.12'

}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ['-Xenable-jvm-default']
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        javaParameters = true
    }
}

compileTestJava.options.compilerArgs.add '-parameters'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'YAJ-RPC'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Yet Another JSON RPC (YAJ-RPC) is a JSON RPC 2.0 implementation for JVM lanuages'
                url 'https://markaren.github.io/YAJ-RPC/'

                scm {
                    connection 'scm:git:git://github.com/markaren/YAJ-RPC.git'
                    developerConnection 'scm:git:ssh://github.com/markaren/YAJ-RPC.git'
                    url 'https://github.com/markaren/YAJ-RPC/tree/master'
                }

                licenses {
                    license {
                        name 'The MIT License'
                        url 'https://opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id 'laht'
                        name 'Lars Ivar Hatledal'
                        email 'larsivarhatledal@gmail.com'
                    }
                }
            }
        }
    }
}